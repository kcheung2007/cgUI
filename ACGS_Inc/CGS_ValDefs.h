//CGS_ValDefs.h
#ifndef _CGS_VALDEFS_H
#define _CGS_VALDEFS_H

#include "ObjectTypes.h" //for TEXT_OBJ_SUBTYPE, etc (used in T,Line,Circle modes,etc)

enum EDIT_OBJ_ATTR
{
	EDIT_OBJ_ATTR_FIRST_VOID=0x1000, //void record

	EDIT_OBJ_TYPEFACE,
	EDIT_OBJ_SIZE,//Used for font size, circle radius
	EDIT_OBJ_ROTATION,
	EDIT_OBJ_ITALIC_ANGLE,
	EDIT_OBJ_ITALIC_ENABLE,
	EDIT_OBJ_BOLD_ENABLE,
	EDIT_OBJ_WIDTH_PERCENT,//used for fonts percent of original, graphics (percent of original)
	EDIT_OBJ_HEIGHT_PERCENT,//used for grpahics only (percent of original)
	EDIT_OBJ_FLASH_ENABLE,
	EDIT_OBJ_SMALL_CAPS_SCALE,
	EDIT_OBJ_SMALL_CAPS_ENABLE,
	EDIT_OBJ_BEVEL_SIZE,
	EDIT_OBJ_BEVEL_ENABLE,

	EDIT_OBJ_STROKE_THICKNESS,//used for line, polygon, curve ellipse
	EDIT_OBJ_STROKE_LENGTH,// line only
	EDIT_OBJ_ROUNDNESS,// circles for aspect correction, rectangles for rounding edges
	EDIT_OBJ_X_POSITION_ABS,
	EDIT_OBJ_Y_POSITION_ABS,
	EDIT_OBJ_WIDTH_ABS,//rectangles, pictures
	EDIT_OBJ_HEIGHT_ABS,//rectangles pictures
	EDIT_OBJ_VERTEX_COUNT,// polygons, curves
	EDIT_OBJ_FILLED,//polygons, (future circle?)

	EDIT_DONGLE_QUERY2,
	EDIT_DONGLE_QUERY3,

	EDIT_OBJ_FACE_ENABLE,
	EDIT_OBJ_FACE_VISIBILITY,
	EDIT_OBJ_FACE_EXTEND,
	EDIT_OBJ_FACE_BLUR,
	EDIT_OBJ_FACE_ALPHA_MASK,
	EDIT_OBJ_FACE_COLORSCHEME,

	EDIT_OBJ_OUTLINE1_ENABLE,
	EDIT_OBJ_OUTLINE1_SIZE,
	EDIT_OBJ_OUTLINE1_EXTEND,
	EDIT_OBJ_OUTLINE1_BLUR,
	EDIT_OBJ_OUTLINE1_VISIBILITY,
	EDIT_OBJ_OUTLINE1_H_OFFSET,
	EDIT_OBJ_OUTLINE1_V_OFFSET,
	EDIT_OBJ_OUTLINE1_ALPHA_MASK,
	EDIT_OBJ_OUTLINE1_COLORSCHEME,

	EDIT_OBJ_OUTLINE2_ENABLE,
	EDIT_OBJ_OUTLINE2_SIZE,
	EDIT_OBJ_OUTLINE2_EXTEND,
	EDIT_OBJ_OUTLINE2_BLUR,
	EDIT_OBJ_OUTLINE2_VISIBILITY,
	EDIT_OBJ_OUTLINE2_H_OFFSET,
	EDIT_OBJ_OUTLINE2_V_OFFSET,
	EDIT_OBJ_OUTLINE2_ALPHA_MASK,
	EDIT_OBJ_OUTLINE2_COLORSCHEME,

	EDIT_OBJ_SHADOW1_ENABLE,
	EDIT_OBJ_SHADOW1_SIZE,
	EDIT_OBJ_SHADOW1_EXTEND,
	EDIT_OBJ_SHADOW1_BLUR,
	EDIT_OBJ_SHADOW1_VISIBILITY,
	EDIT_OBJ_SHADOW1_DIRECTION,
	EDIT_OBJ_SHADOW1_H_OFFSET,
	EDIT_OBJ_SHADOW1_V_OFFSET,
	EDIT_OBJ_SHADOW1_ALPHA_MASK,
	EDIT_OBJ_SHADOW1_COLORSCHEME,

	EDIT_OBJ_SHADOW2_ENABLE,
	EDIT_OBJ_SHADOW2_SIZE,
	EDIT_OBJ_SHADOW2_EXTEND,
	EDIT_OBJ_SHADOW2_BLUR,
	EDIT_OBJ_SHADOW2_VISIBILITY,
	EDIT_OBJ_SHADOW2_DIRECTION,
	EDIT_OBJ_SHADOW2_H_OFFSET,
	EDIT_OBJ_SHADOW2_V_OFFSET,
	EDIT_OBJ_SHADOW2_ALPHA_MASK,
	EDIT_OBJ_SHADOW2_COLORSCHEME,


	EDIT_OBJ_CAST_ENABLE,
	EDIT_OBJ_CAST_SIZE,
	EDIT_OBJ_CAST_EXTEND,
	EDIT_OBJ_CAST_BLUR,
	EDIT_OBJ_CAST_VISIBILITY,
	EDIT_OBJ_CAST_DIRECTION,
	EDIT_OBJ_CAST_H_OFFSET,
	EDIT_OBJ_CAST_V_OFFSET,
	EDIT_OBJ_CAST_ALPHA_MASK,
	EDIT_OBJ_CAST_COLORSCHEME,

	EDIT_OBJ_UNDERLINE_ENABLE,
	EDIT_OBJ_UNDERLINE_HEIGHT,
	EDIT_OBJ_UNDERLINE_OFFSET,
	EDIT_OBJ_UNDERLINE_COLORSCHEME,
	EDIT_OBJ_UNDERLINE_VISIBILITY,
	
	EDIT_OBJ_PRIORITY,
	EDIT_OBJ_CHAR_SPACING,
	EDIT_OBJ_CHAR_KERNING,

	EDIT_FONT_SAMPLE_WINDOW_ENABLED,

	EDIT_DONGLE_QUERY1,

	EDIT_OBJECT_PROPERTIES_UPDATE_ALL_UI_VALUES,//Special flag for core to notify UI to update all values in object properties menu
	//-----------------------------------------------
	EDIT_OBJ_ATTR_LAST_VOID //<<=============== ITEM COUNT = EDIT_OBJ_ATTR_LAST_VOID-EDIT_OBJ_ATTR_FIRST_VOID-1
};



enum LINE_OBJ_ATTR
{
	LINE_OBJ_ATTR_FIRST_VOID=0x2000,
	LINE_OBJ_ATTR_LAST_VOID
};

enum PAGE_OBJ_ATTR
{
	PAGE_OBJ_ATTR_FIRST_VOID=0x3000,
	PAGE_TYPE,
	PAGE_LAST_EXPORT_FULL_FILENAME,
	PAGE_IN_EFFECT_CODE,//DWORD in_effect_code;//khoi
	PAGE_IN_EFFECT_SPEED,//DWORD in_effect_speed;//khoi
	PAGE_OUT_EFFECT_CODE,//DWORD out_effect_code;
	PAGE_OUT_EFFECT_SPEED,//DWORD out_effect_speed;
	PAGE_EFFECT_HOLD_HOURS,//DWORD hold_hours;
	PAGE_EFFECT_HOLD_MINUTES,//DWORD hold_minutes;//khoi
	PAGE_EFFECT_HOLD_SECONDS,//DWORD hold_seconds;//khoi
	PAGE_EFFECT_HOLD_FRAMES,//DWORD hold_frames;//khoi
	PAGE_EFFECT_CLEAR_SCREEN,//BOOL clear_screen;
	PAGE_EFFECT_END_ON_SCREEN,//BOOL end_on_screen;//khoi
	PAGE_EFFECT_FADE_IN_FIELDS,//DWORD fade_in_fields;
	PAGE_EFFECT_FADE_OUT_FIELDS,//DWORD fade_out_fields;
	PAGE_EFFECT_FADE_IN_CHECKBOX,//BOOL roll_fade_in_checkbox; //khoi
	PAGE_EFFECT_FADE_OUT_CHECKBOX,//BOOL roll_fade_out_checkbox; //khoi
	PAGE_EFFECT_FLASH_FIELDS,//DWORD flash_fields;
	PAGE_EFFECT_REVERSE_DIR,//BOOL effect_reverse_direction;
	PAGE_EFFECT_PLAY_PROJECT_BUTTON_SHOWS_STOP,//	BOOL play_project_button_shows_stop;//K CHANGE LABEL FROM "PLAY PROJECT" TO STOP

	PAGE_EXPORTS_ALPHA,
	HELP_FILENAME,

	PAGE_TAB_0_PERCENT,
	PAGE_TAB_1_PERCENT,
	PAGE_TAB_2_PERCENT,
	PAGE_TAB_3_PERCENT,
	PAGE_TAB_4_PERCENT,
	PAGE_TAB_5_PERCENT,
	PAGE_TAB_6_PERCENT,
	PAGE_TAB_7_PERCENT,
	PAGE_TAB_8_PERCENT,
	PAGE_TAB_9_PERCENT,
	
	PAGE_TAB_0_ALIGN,
	PAGE_TAB_1_ALIGN,
	PAGE_TAB_2_ALIGN,
	PAGE_TAB_3_ALIGN,
	PAGE_TAB_4_ALIGN,
	PAGE_TAB_5_ALIGN,
	PAGE_TAB_6_ALIGN,
	PAGE_TAB_7_ALIGN,
	PAGE_TAB_8_ALIGN,
	PAGE_TAB_9_ALIGN,

	PAGE_TAB_POSITION_PERCENT_INCREMENT,//for buddy bar increment delta

	PAGE_TOP_MARGIN,
	PAGE_BOTTOM_MARGIN,
	PAGE_LEFT_MARGIN,
	PAGE_RIGHT_MARGIN,


	PAGE_OBJ_ATTR_LAST_VOID
};

enum STATUS_ATTR
{
	STATUS_FIRST_VOID=0x4000,
	STATUS_FONT_SAMPLE_SHOWS_GFX,
	STATUS_TW_SAVE_EFFECT_BUTTON,
	STATUS_TW_SAVE_TIMELINE_BUTTON,
	STATUS_PROGRAM_FOLDER,
	STATUS_PAGE_LOAD_FULL_PATH,
	STATUS_DEFAULT_ROTATION,
	STATUS_MRU_ITALIC_ANGLE,
	STATUS_UNDERLINE_HEIGHT,
	STATUS_UNDERLINE_OFFSET,
	STATUS_UNDERLINE_RED,
	STATUS_UNDERLINE_GREEN,
	STATUS_UNDERLINE_BLUE,
	STATUS_NEW_LINE_JUSTIFY_MODE,
	STATUS_LAST_SELECTED_TYPEFACE,
	STATUS_PLAYING_EFX,
	STATUS_EDIT_WINDOW_WIDTH,
	STATUS_EDIT_WINDOW_HEIGHT,
	STATUS_PROGRAM_INITIALIZED,
	STATUS_FOLDER_INFO_PROJECT,	// load,save project
	STATUS_FOLDER_INFO_IMPORT_TEXT,//import text file .txt,.doc,.rtf, etc.
	STATUS_FOLDER_INFO_IMPORT_GRAPHICS,//load picture
	STATUS_FOLDER_INFO_EXPORT_PAGE,//export page,export project as tga files
	STATUS_FOLDER_INFO_PALETTE,//TODO 
	STATUS_FOLDER_INFO_PRESETS,//todo 
	STATUS_FOLDER_INFO_TEMPLATES,//todo page templates
	STATUS_DONGLE_INIT,
	STATUS_PROGRAM_KEYBOARD,
	STATUS_PROGRAM_RECALL_LAST_STYLE,
	STATUS_PROGRAM_RELOAD_LAST_PROJECT,

	STATUS_LAST_VOID

	
};

enum TW_TRIN_ATTR
{
	TW_TRINITY_PROGRAM_BG_SRC=0x4800,
	TW_TRINITY_PREVIEW_BG_SRC,
	TW_TRINITY_OUTPUT_CHANNEL,
	TW_PREVIEW_SRC,
	TW_BUS_SRC,
	TW_PREVIEW_BUS,
	TW_EFFECT_END,

	TW_TRIN_ATTR_LAST_VOID
};

enum MENU_DATA_INFO
{
	MENU_DATA_FONT_HEIGHT=0x5000,
	MENU_DATA_FONT_WIDTH_PERCENT,
	MENU_DATA_FONT_NAME,
	MENU_DATA_WIDTH_PERCENT,
	MENU_DATA_FACE_ALPHA,
	MENU_DATA_OUTLINE_SIZE,
	MENU_DATA_OUTLINE_ALPHA,
	MENU_DATA_SHADOW1_SIZE,
	MENU_DATA_SHADOW1_ALPHA,
	MENU_DATA_SHADOW1_OCTANT,
	MENU_DATA_SHADOW2_SIZE,
	MENU_DATA_SHADOW2_ALPHA,

	MENU_DATA_INFO_LAST_VOID
};


//for CGS_SetDataItem() and CGS_GetDataItem()
enum COPY_DATA_ITEM
{
	CDI_CURAT_FACE_RGB=0x6000,
	CDI_CURAT_FACE_ALPHA,
	CDI_CURAT_OUTLINE1_RGB,
	CDI_CURAT_OUTLINE1_ALPHA,
	CDI_CURAT_OUTLINE2_RGB,
	CDI_CURAT_OUTLINE2_ALPHA,
	CDI_CURAT_SHADOW1_RGB,
	CDI_CURAT_SHADOW1_ALPHA,
	CDI_CURAT_SHADOW2_RGB,
	CDI_CURAT_SHADOW2_ALPHA,

	COPY_DATA_ITEM_LAST_VOID
};


enum EDIT_ATTR
{
EDIT_LINE_SPACING=0x7000,
EDIT_WORD_WRAP_MODE,
EDIT_SAFE_TITLE_ENABLE,
EDIT_SAFE_TITLE_PERCENT,
EDIT_SAFE_ACTION_ENABLE,
EDIT_CENTERPOINT_ENABLE,
EDIT_SAFE_TITLE_LEFT,
EDIT_SAFE_TITLE_RIGHT,
EDIT_SAFE_TITLE_TOP,
EDIT_SAFE_TITLE_BOTTOM,
EDIT_ENABLE_OBJECT_SELECTION_MARKERS,
EDIT_ENABLE_DATE_STAMP,
EDIT_ENABLE_TIME_STAMP,
EDIT_AUTO_PREVIEW_UPDATE_ENABLE,
EDIT_CURSOR_ADVANCE_DISABLE,
EDIT_ENABLE_SELECTION_MARKERS,

EDIT_TAB_MARKERS_ENABLE,
EDIT_TAB_MENU_DISPLAY_ENABLE,
EDIT_TAB_MENU_DISPLAY_CURRENT_TAB_0_9,
EDIT_HORIZ_GRID_ENABLE,
EDIT_HORIZ_GRID_SPACING,
EDIT_HORIZ_GRID_OFFSET,
EDIT_VERT_GRID_ENABLE,
EDIT_VERT_GRID_SPACING,
EDIT_VERT_GRID_OFFSET,
EDIT_SHOW_GRID_ENABLE,
EDIT_AUTO_GRID_SNAP_ENABLE,

EDIT_AUTO_PREVIEW_RERENDER_ENABLE,
EDIT_PLOT_DISABLE,

EDIT_PROJECT_CURRENT_PAGE_NUMBER,
EDIT_PROJECT_TOT_PAGES,
EDIT_PROJECT_MODIFIED,
EDIT_PROJECT_NEEDS_FILENAME,

EDIT_LOCK_ATTRIBUTES,
EDIT_SET_OBJECT_SUBTYPE_MODE,
EDIT_NLE_IMAGE_FILE,
EDIT_ZOOM_FACTOR,
EDIT_MOUSE_POINTER_TYPE,

EDIT_ATTR_LAST_VOID
};

//======================================================
//values for CGS_Action()
enum CGS_ACTION
{
	CGSA_FIRST_VOID=0xF000, //void record

	CGSA_CLEAR_ALL,
	CGSA_CLEAR_TEXT,
	CGSA_CLEAR_GRAPHICS,

	CGSA_APPEND_PAGE,
	CGSA_PREPEND_PAGE,
	CGSA_INSERT_PAGE_BEFORE,
	CGSA_INSERT_PAGE_AFTER,
	CGSA_COPY_PAGE,
	CGSA_CUT_PAGE,
	CGSA_DUPLICATE_PAGE,
	CGSA_PASTE_PAGE_BEFORE,
	CGSA_PASTE_PAGE_AFTER,
	CGSA_PASTE_MERGE_PAGE, //paste src to current by merging

	CGSA_APPEND_LAYER,
	CGSA_PREPEND_LAYER,
	CGSA_INSERT_LAYER_BEFORE,
	CGSA_INSERT_LAYER_AFTER,
	CGSA_COPY_LAYER,
	CGSA_CUT_LAYER,
	CGSA_PASTE_LAYER,
	CGSA_PASTE_MERGE_LAYER, //paste src to current by merging

	
	CGSA_COPY_STYLE,
	CGSA_PASTE_STYLE,
	CGSA_RECALL_DEFAULT_STYLE,
	CGSA_SAVE_STYLE_PRESET,

	CGSA_LINE_CLEAR,
	CGSA_LINE_DELETE,
	CGSA_LINE_INSERT_BEFORE,
	CGSA_LINE_INSERT_AFTER,
	CGSA_LINE_JUSTIFY_LEFT,
	CGSA_LINE_JUSTIFY_CENTER,
	CGSA_LINE_JUSTIFY_RIGHT,
	CGSA_LINE_JUSTIFY_FLUSH,
	
	CGSA_PAGE_JUSTIFY_LEFT,
	CGSA_PAGE_JUSTIFY_CENTER,
	CGSA_PAGE_JUSTIFY_RIGHT,
	CGSA_PAGE_JUSTIFY_FLUSH,
	CGSA_PAGE_V_JUSTIFY_TOP,
	CGSA_PAGE_V_JUSTIFY_CENTER,
	CGSA_PAGE_V_JUSTIFY_BOT,

	CGSA_PLAYER_PLAY_PROJECT,
	CGSA_PLAYER_CANCEL_PLAYBACK,
	CGSA_PLAYER_PAUSE_PLAYBACK,
	CGSA_PLAYER_RESUME_PLAYBACK,
	CGSA_PLAYER_SINGLE_STEP,
	CGSA_PLAYER_SHOW_LIVE_VIDEO,
	CGSA_PLAYER_FADE_TOGGLE,

	CGSA_PASTE_TEXT_FROM_CLIPBOARD,
	CGSA_PASTE_TEXT_ORIGINAL_POSITION,
	CGSA_COPY_TEXT_TO_CLIPBOARD,

	CGSA_PRIORITY_SEND_TO_FRONT,
	CGSA_PRIORITY_SEND_FORWARD_ONE,
	CGSA_PRIORITY_SEND_BACKWARD_ONE,
	CGSA_PRIORITY_SEND_TO_BACK,

	CGSA_LAST_VOID//void record
};
//======================================================


enum CGS_IMAGE_FILE_FORMAT{			// image save (export)
CGS_FILE_FORMAT_TARGA32,			// *.TGA (32 bit)
CGS_FILE_FORMAT_TARGA24,			// *.TGA (24 bit)
CGS_FILE_FORMAT_TARGA16,			// *.TGA (16 bit)
CGS_FILE_FORMAT_BMP32,				// *.BMP (32 bit)
CGS_FILE_FORMAT_BMP24,				// *.BMP (24 bit)
CGS_FILE_FORMAT_JPG,				// *.JPG
CGS_FILE_FORMAT_TIFF,				// *.TIF
CGS_FILE_FORMAT_PNG,				// *.PNG
CGS_FILE_FORMAT_PCX,				// *.PCX
CGS_FILE_FORMAT_TRINITY_FRAMESTORE, // *.TFS
CGS_FILE_FORMAT_TRINITY_TFX,        // *.TFX
CGS_FILE_FORMAT_DPS_DPT,			// *.DPT
CGS_FILE_FORMAT_FAST_VM				// *.VM; *.VMT
};


//Mouse pointer modes --------------------------------------------------------
//When cursor passes over various document cursor and bounding box control handles, 
//the CG core layer will request one of these modes via the CGS_RegisterMousePointerModeProc() registered callback function.
//The UI layer will handle the resource loading, the mechanics of which will differ depending on UI implementation (MFC-Win32 vs. PlayUI-PlayCursorObject, etc.)
enum CGS_MOUSE_POINTER_MODE{
CGS_MOUSE_PTR_ARROW,				//normal arrow
CGS_MOUSE_PTR_WAIT,					//hour glass
CGS_MOUSE_PTR_NONE,					//empty cursor
CGS_MOUSE_PTR_SLIDE_HORIZONTAL,		//2 arrows, left and right
CGS_MOUSE_PTR_SLIDE_VERTICAL,		//2 arrows, up and down
CGS_MOUSE_PTR_SLIDE_4WAY,			//4 arrows, up,down,left,right
CGS_MOUSE_PTR_SLIDE_DIAGONAL_LL_UR,	//2 arrows, diagonal lower left to upper right
CGS_MOUSE_PTR_SLIDE_DIAGONAL_UL_LR,	//2 arrows, diagonal upper left to lower right
CGS_MOUSE_PTR_ROTATE_X,				//x-rotation arrow
CGS_MOUSE_PTR_ROTATE_Y,				//y-rotation arrow
CGS_MOUSE_PTR_ROTATE_Z				//z-rotation arrow
};


//min distance mouse drag must travel to enter bounding box mode (vs L cursor mode)
#define CGS_SELECTION_MODE_ACTIVATE_MIN_DRAG_DISTANCE 4 

//following used in EventCode for void CG_Doc::HandleMouseEvent(DWORD EventCode,int X,int Y)
#define CGS_EVENT_MOUSE_DOWN	0
#define CGS_EVENT_MOUSE_DRAG	1
#define CGS_EVENT_MOUSE_UP		2
#define CGS_EVENT_SHIFT_MOUSE_DOWN	3
#define CGS_EVENT_SHIFT_MOUSE_DRAG	4
#define CGS_EVENT_SHIFT_MOUSE_UP	5
#define CGS_EVENT_MOUSE_MOVE 6


//justify modes (also see char *justify_names[] in cg_seq.cpp)
#define CGS_JUSTIFY_LEFT    0
#define CGS_JUSTIFY_CENTER  1
#define CGS_JUSTIFY_RIGHT   2
#define CGS_JUSTIFY_FLUSH   3
#define CGS_JUSTIFY_FREE   4
#define CGS_JUSTIFY_SKIP   5
#define CGS_JUSTIFY_VTOP 0
#define CGS_JUSTIFY_VMID 1
#define CGS_JUSTIFY_VBOT 2

#define CGS_STILL_PAGE_TYPE 0
#define CGS_ROLL_PAGE_TYPE  1
#define CGS_CRAWL_PAGE_TYPE 2
#define CGS_ANIM_PAGE_TYPE  3

#define CGS_TAB_ALIGN_LEFT 0
#define CGS_TAB_ALIGN_CENTER 1
#define CGS_TAB_ALIGN_RIGHT 2
#define CGS_TAB_ALIGN_DECIMAL 3

//------------------------------------------------------------------------------
//Generic key modifier state flags:
#define CGS_SHIFT_KEY_DOWN		(1L<<0)
#define CGS_CONTROL_KEY_DOWN	(1L<<1)
#define CGS_ALT_KEY_DOWN		(1L<<2)
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//Generic mouse button state flags:
#define CGS_MOUSE_LBUTTON_DOWN	(1L<<0)
#define CGS_MOUSE_MBUTTON_DOWN	(1L<<1)
#define CGS_MOUSE_RBUTTON_DOWN	(1L<<2)
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
//Codes for Program Settings->Keyboard type selection
#define CGS_KEYBOARD_AUTO 0
#define CGS_KEYBOARD_ARABIC1 1
#define CGS_KEYBOARD_CHINESE 2
#define CGS_KEYBOARD_FARSI1 3
#define CGS_KEYBOARD_FARSI2 4
#define CGS_KEYBOARD_INDIC 5
#define CGS_KEYBOARD_JAPANESE 6
#define CGS_KEYBOARD_KOREAN 7
#define CGS_KEYBOARD_THAI 8
#define CGS_KEYBOARD_VIETNAMESE 9

#endif


