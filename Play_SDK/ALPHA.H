// Filename: ALPHA.H                                        
// "ALPHA" Generated by WinMaker Pro.                       
// Author:   VINCENT LAW                                    

// 
// ***********************************************************************
// Do not add code here.
// 
// This file is maintained by the Switch-It Module.
// As you make changes in your applications design,
// this file is automatically updated, therefore you never modify this file.
// 
// 
// 
// For more information,
// see the section "How code is generated" in the documentation.
// 
// ***********************************************************************
// 
 

#ifndef _WMINC_ALPHA
#define _WMINC_ALPHA  100

 
// CALLBACK DEFINITION
#define BLD_CALLBACK CALLBACK
 
#ifdef WIN32
#ifndef NOCOMMCTRLS
#include <commctrl.h>
#endif
#endif
 
//  Give access to variables in all code modules 
extern HINSTANCE hInst;
extern HWND      MainhWnd;
extern UINT      wHelpMessage;
extern BOOL      bHelpSupport;
extern DWORD     dwDialogProp;
extern BOOL      b256Color;
extern HINSTANCE hBMPInst;
extern HINSTANCE hInstCtl3d;
extern HWND      hMDIClient;     //  Handle to client window for MDI.
extern UINT      idMDIFirstChild;//  ID to first child for MDI.
extern HWND FONThDlg;
extern DLGPROC FONTlpProc;
extern HWND COLORhDlg;
extern DLGPROC COLORlpProc;
extern HWND APTEXThDlg;
extern DLGPROC APTEXTlpProc;
extern HWND PALETTEhDlg;
extern DLGPROC PALETTElpProc;
extern HWND STATUSBARhDlg;
extern DLGPROC STATUSBARlpProc;
extern HWND PAGEhDlg;
extern DLGPROC PAGElpProc;
extern HWND GRAPHICShDlg;
extern DLGPROC GRAPHICSlpProc;
extern HWND EffectshDlg;
extern DLGPROC EffectslpProc;
extern HWND PageTitlehDlg;
extern DLGPROC PageTitlelpProc;
extern HWND PageDatahDlg;
extern DLGPROC PageDatalpProc;
extern HWND PageActionhDlg;
extern DLGPROC PageActionlpProc;
 
// *************************************************************
//  Variables, types and constants for controls in main window.
// *************************************************************
 
extern HWND      hClient;        //  Handle to window in client area.
extern DLGPROC   lpClient;       //  Function for window in client area.
extern UINT      wBLDWindowType;
 
 
#define CLIENTSTRIP WS_MINIMIZE|WS_MAXIMIZE|WS_CAPTION|WS_BORDER|WS_DLGFRAME|WS_SYSMENU|WS_POPUP|WS_THICKFRAME|DS_MODALFRAME|DS_SYSMODAL
#define TOOLBARSTRIP WS_MINIMIZE|WS_MAXIMIZE|WS_POPUP|DS_SYSMODAL
 
typedef struct 
   {
   long          style;
   // MORE ...
   } BLD_DLGTEMPLATE;
 
typedef BLD_DLGTEMPLATE far             *LPBLD_DLGTEMPLATE;
 
#define BLDTOOLBARTOP                    1
#define BLDTOOLBARBOTTOM                 2
#define BLDTOOLBARLEFT                   3
#define BLDTOOLBARRIGHT                  4
#define BLDDLGCLIENT                     5
#define BLDDLGMODAL                      6
#define BLDDLGMODELESS                   7
 
#ifdef WIN32
#define BLDCtl3dDllName                 "CTL3D32.DLL"
#else
#define BLDCtl3dDllName                 "CTL3DV2.DLL"
#endif
 
// Constants for bitmap drawing
#define BLDBITMAPCLIP                    0
#define BLDBITMAPSTRETCH                 1
#define BLDBITMAPCENTER                  2

 
// Constants for error message strings
#define BLD_CannotRun                   4000
#define BLD_CannotCreate                4001
#define BLD_CannotLoadMenu              4002
#define BLD_CannotLoadIcon              4003
#define BLD_CannotLoadBitmap            4004
#define BLD_CannotCreateWindow          4005
    
// User defined constant ID's
    
// Resource IDs for menus and accelerators
#define IDR_APMENU                      2

    
// Switch-It Module automatic generated constant ID's
    
#define IDM_NewProject                  4000
#define IDM_OpenProject                 4001
#define IDM_SaveProject                 4002
#define IDM_ExportPageas                4003
#define IDM_ExportProjectas             4004
#define IDM_ImportText                  4005
#define IDM_PageSetup                   4006
#define IDM_Exit                        4007
#define IDM_Undo                        4008
#define IDM_Redo                        4009
#define IDM_Cut                         4010
#define IDM_Copy                        4011
#define IDM_Paste                       4012
#define IDM_SelectAll                   4013
#define IDM_SelectText                  4014
#define IDM_SelectGraphics              4015
#define IDM_CenterSelection             4016
#define IDM_Copy4017                    4017
#define IDM_Paste4018                   4018
#define IDM_PasteSpecific               4019
#define IDM_RecallDefaults              4020
#define IDM_SaveasPreset                4021
#define IDM_Underline                   4022
#define IDM_Clear                       4023
#define IDM_Delete                      4024
#define IDM_Before                      4025
#define IDM_After                       4026
#define IDM_Spacing                     4027
#define IDM_JustifyLeft                 4028
#define IDM_JustifyCenter               4029
#define IDM_JustifyRight                4030
#define IDM_JustifyForce                4031
#define IDM_Cut4032                     4032
#define IDM_Copy4033                    4033
#define IDM_Before4034                  4034
#define IDM_After4035                   4035
#define IDM_Before4036                  4036
#define IDM_After4037                   4037
#define IDM_AddPicture                  4038
#define IDM_WordWrap                    4039
#define IDM_ClearAll                    4040
#define IDM_ClearText                   4041
#define IDM_ClearGraphics               4042
#define IDM_JustifyLeft4043             4043
#define IDM_JustifyCenter4044           4044
#define IDM_JustifyRight4045            4045
#define IDM_JustifyForce4046            4046
#define IDM_JustifyUpper3rd             4047
#define IDM_JustifyCenter3rd            4048
#define IDM_JustifyLower3rd             4049
#define IDM_VideoSetup                  4050
#define IDM_OnlineHelp                  4051
#define IDM_About                       4052

#define WMPDEBUG 
    
    
// Help ID's used by functions
    
    
#if !defined(THISISBLDRC)
    
#ifndef NOSYBSUPPORT
void  SybExit( void );
short SybInit( unsigned hinst );
#endif //NOSYBSUPPORT
int PASCAL WinMain(HINSTANCE,HINSTANCE,LPSTR,int);
LRESULT BLD_CALLBACK BLDMainWndProc(HWND,UINT,WPARAM,LPARAM);
LRESULT BLDDefWindowProc(HWND,UINT,WPARAM,LPARAM);
BOOL BLDKeyTranslation(MSG *);
BOOL BLDInitApplication(HINSTANCE,HINSTANCE,int *,LPSTR);
BOOL BLDExitApplication(void);
HWND BLDCreateClientControls(char *,DLGPROC);
BOOL BLDInitMainMenu(HWND);
BOOL BLDMenuCommand(HWND,UINT,WPARAM,LPARAM);
BOOL BLDMenuHelp(HWND,UINT,WPARAM,LPARAM);
BOOL BLDRegisterClass(HINSTANCE);
HWND BLDCreateWindow(HINSTANCE);
int BLDDisplayMessage(HWND,UINT,char *,int);
BOOL BLDSwitchMenu(HWND,char *);
HMENU BLDLoadMenu(HWND,int,HMENU *);
BOOL BLDDrawBitmap(LPDRAWITEMSTRUCT,char *,BOOL);
BOOL BLDDrawIcon(LPDRAWITEMSTRUCT,char *);
void BLDMoveWindow(HWND,int,int,int,int,BOOL);
BOOL BLDSendMDIMessage(HWND,UINT);
BOOL BLDDrawBkgndIcon(HWND,PAINTSTRUCT *,char *,int);
BOOL BLDDrawBkgndBitmap(HWND,PAINTSTRUCT *,char *,int,BOOL,BOOL);
BOOL BLDDrawAutoState(LPDRAWITEMSTRUCT,char *,BOOL,BOOL);
BOOL BLDDrawStateBitmap(LPDRAWITEMSTRUCT,char *,char *,char *,char *,BOOL);
BOOL BLDDrawStateIcon(LPDRAWITEMSTRUCT,char *,char *,char *,char *);
void BLDGetDlgScrolled(HWND,int *,int *);
void BLDSetDlgScrolled(HWND,int,int);
void BLDFindCtrlsRightBottom(HWND,int *,int *);
void BLDCalcScrollRanges(HWND,int *,int *,int,int,int,int);
BOOL BLDScrollDlg(HWND,UINT,int,int,int,int,int,int,int,int,BOOL);
BOOL BLDExitScrollDlg(HWND);
BOOL BLDSizeDlg(HWND,int,int);
HBITMAP BLDLoadBitmap(HANDLE,char *);
HWND BLDCreateClientDlg(char *,HWND,UINT,DLGPROC,int,BOOL);
LRESULT BLDSizeToolBars(HWND,UINT,int,int,int,BOOL);
void BLDCalcToolbarFrame(HWND,int *,int *,int *,int *);
void BLDMoveDlgClient(HWND,HWND);
void BLDSetClientFocus(HWND hWnd);
void BLDClientMove(HWND hWnd);
BOOL BLDInitCtrlFont(HWND,int,int, int, int, int, int, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, char *);
BOOL BLDExitCtrlFont(HWND,int);
BOOL BLDInitSolidBrush(HWND,COLORREF);
BOOL BLDInitPatternBrush(HWND,char *);
BOOL BLDExitBrush(HWND);
HBRUSH BLDCtlColorStockBrush(HWND,int);
HBRUSH BLDCtlColorPropBrush(HWND);
HBRUSH BLDCtlColorDefaultBrush(HWND);
HBRUSH BLDCtlColorBrushSetOrg(HWND,HDC);
BOOL BLDCheckF1HelpKey(BOOL);
void BLDHelpTranslation(MSG *);
void BLDShowHelp(HWND,UINT,DWORD);
BOOL BLDHelpFilter(HWND,UINT,WPARAM,LPARAM,DWORD,LPARAM *,BOOL);
BOOL BLDGetHelpFileName(char *);
LRESULT BLDDefWindowProcMsg(HWND,UINT,WPARAM,LPARAM);
BOOL BLDMainRegClass(HINSTANCE);
BOOL BLDMainRegClassDef(HINSTANCE);
BOOL BLDMainExitClass(void);
BOOL BLDMainExitClassDef(void);
HWND BLDMainCreateWnd(void);
HWND BLDMainCreateWndDef(void);
BOOL BLDWndMsgFilter(HWND,UINT,WPARAM,LPARAM,DWORD,LRESULT *);
BOOL BLDDlgMsgFilter(HWND,UINT,WPARAM,LPARAM,int,DWORD,BOOL *);
BOOL BLDAddClientDlg(HWND,DLGPROC);
BOOL BLDRemoveClientDlg(HWND);
BOOL BLDIsClientDlgDialogMessage(MSG *);
BOOL BLDDrawItem(HWND,LPDRAWITEMSTRUCT);
BOOL BLDBitmapToScreen(HDC,char *,int,int,int,int,DWORD,BOOL);
 
 
void BLDMoveDlgClientDef(HWND,HWND);
int  BLDDisplayMessageDef(HWND,UINT,char *,int);
BOOL BLDDrawBitmapDef(LPDRAWITEMSTRUCT,char *,BOOL);
BOOL BLDDrawIconDef(LPDRAWITEMSTRUCT,char *);
void BLDMoveWindowDef(HWND,int,int,int,int,BOOL);
BOOL BLDSendMDIMessageDef(HWND,UINT);
BOOL BLDDrawBkgndIconDef(HWND,PAINTSTRUCT *,char *,int);
BOOL BLDDrawBkgndBitmapDef(HWND,PAINTSTRUCT *,char *,int,BOOL,BOOL);
BOOL BLDDrawAutoStateDef(LPDRAWITEMSTRUCT,char *,BOOL,BOOL);
BOOL BLDDrawStateBitmapDef(LPDRAWITEMSTRUCT,char *,char *,char *,char *,BOOL);
BOOL BLDDrawStateIconDef(LPDRAWITEMSTRUCT,char *,char *,char *,char *);
void BLDGetDlgScrolledDef(HWND,int *,int *);
void BLDSetDlgScrolledDef(HWND,int,int);
void BLDFindCtrlsRightBottomDef(HWND,int *,int *);
void BLDCalcScrollRangesDef(HWND,int *,int *,int,int,int,int);
BOOL BLDScrollDlgDef(HWND,UINT,int,int,int,int,int,int,int,int,BOOL);
BOOL BLDExitScrollDlgDef(HWND);
BOOL BLDSizeDlgDef(HWND,int,int);
HWND BLDCreateClientDlgDef(char *,HWND,UINT,DLGPROC,int,BOOL);
LRESULT BLDSizeToolBarsDef(HWND,UINT,int,int,int,BOOL);
void BLDCalcToolbarFrameDef(HWND,int *,int *,int *,int *);
void BLDSetClientFocusDef(HWND hWnd);
void BLDClientMoveDef(HWND hWnd);
BOOL BLDInitCtrlFontDef(HWND,int,int, int, int, int, int, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, BYTE, char *);
BOOL BLDExitCtrlFontDef(HWND,int);
BOOL BLDInitSolidBrushDef(HWND,COLORREF);
BOOL BLDInitPatternBrushDef(HWND,char *);
BOOL BLDExitBrushDef(HWND);
HBRUSH BLDCtlColorStockBrushDef(HWND,int);
HBRUSH BLDCtlColorPropBrushDef(HWND);
HBRUSH BLDCtlColorDefaultBrushDef(HWND);
HBRUSH BLDCtlColorBrushSetOrgDef(HWND,HDC);
BOOL BLDCheckF1HelpKeyDef(BOOL);
void BLDHelpTranslationDef(MSG *);
void BLDShowHelpDef(HWND,UINT,DWORD);
BOOL BLDHelpFilterDef(HWND,UINT,WPARAM,LPARAM,DWORD,LPARAM *,BOOL);
LRESULT BLDDefWindowProcMsgDef(HWND,UINT,WPARAM,LPARAM);
BOOL BLDAddClientDlgDef(HWND,DLGPROC);
BOOL BLDRemoveClientDlgDef(HWND);
BOOL BLDIsClientDlgDialogMessageDef(MSG *);
HWND BLDCreateClientControlsDef(char *,DLGPROC);
BOOL BLDDrawItemDef(HWND,LPDRAWITEMSTRUCT);
static BOOL BLDMoveTo(HDC,int,int);
static BOOL BLDDrawFrame(HDC,int,int,int,int,BOOL);
BOOL BLDBitmapToScreenDef(HDC,char *,int,int,int,int,DWORD,BOOL);
HBRUSH BLDGetGlobalBrushDef(HWND hCtrl,HDC hDC);
 
HWND BLD_FONTDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_FONTDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_FONTDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_FONTDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_ExitUDCFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_COLORDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_COLORDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_COLORDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_COLORDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_SelectColorDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_SelectColorDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_SelectColorDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_SelectColorDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_APTEXTDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_APTEXTDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_APTEXTDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_APTEXTDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PALETTEDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PALETTEDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_PALETTEDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_PALETTEDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_STATUSBARDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_STATUSBARDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_STATUSBARDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_STATUSBARDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PAGEDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PAGEDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_PAGEDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_PAGEDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_GRAPHICSDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_GRAPHICSDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_GRAPHICSDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_GRAPHICSDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_ScreenPreferenceDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_ScreenPreferenceDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_ScreenPreferenceDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_ScreenPreferenceDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_LineSpacingDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_LineSpacingDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_LineSpacingDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_LineSpacingDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_PasteSpecificFontAtDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_PasteSpecificFontAtDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_PasteSpecificFontAtDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_PasteSpecificFontAtDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_UnderlineDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_UnderlineDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_UnderlineDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_UnderlineDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_SelectFontPresetDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_SelectFontPresetDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_SelectFontPresetDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_SelectFontPresetDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_EffectsDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_EffectsDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_EffectsDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_EffectsDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PageTitleDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PageTitleDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_PageTitleDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_PageTitleDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PageDataDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PageDataDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_PageDataDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_PageDataDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PageActionDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
HWND BLD_PageActionDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_PageActionDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_PageActionDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_ABOUTDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_ABOUTDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_ABOUTDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_ABOUTDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_EditWindowDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_EditWindowDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_EditWindowDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_EditWindowDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_VideoSetupDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_VideoSetupDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_VideoSetupDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_VideoSetupDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_VideoSetup1DlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_VideoSetup1DlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_VideoSetup1DlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_VideoSetup1DlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_FrameGrabDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_FrameGrabDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_FrameGrabDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_FrameGrabDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_SPEEDDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_SPEEDDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_SPEEDDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_SPEEDDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_APPictureSizeDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_APPictureSizeDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_APPictureSizeDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_APPictureSizeDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_AskStringDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_AskStringDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_AskStringDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_AskStringDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_FilenameDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_FilenameDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_FilenameDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_FilenameDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_NumericDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_NumericDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_NumericDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_NumericDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_ResizeDlgFunc(HWND hWnd,UINT message,WPARAM wParam,LPARAM lParam);
int BLD_ResizeDlgFuncDef(HWND hWnd,char *szDlgName);
BOOL BLD_CALLBACK BLD_ResizeDlgProc(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);
BOOL BLD_ResizeDlgDefault(HWND hDlg,UINT message,WPARAM wParam,LPARAM lParam);

#endif
    
 
 
// *********************************************************
// ERROR MESSAGE HANDLING (Definitions can be overruled.)
// *********************************************************
 
#ifndef BLDMAINCAPTION
#define BLDMAINCAPTION "Alpha CG"
#endif
 
#ifndef BLDLOADERROR
#define BLDLOADERROR "Cannot load string."
#endif
 
 
 
// Switch-It Module color definitions
 
#define  BLD_BLACK          0X00000000L
#define  BLD_WHITE          0X00FFFFFFL
#define  BLD_GRAY           0X007F7F7FL
#define  BLD_LTGRAY         0X00C0C0C0L
 
 
// Switch-It Module definitions
 
#define BLD_MAXPATH         256
 
// Switch-It Module global dialog box properties
 
#define BLDGRAY_DIALOGBOX   0x00000001L
#define BLDGRAY_BUTTON      0x00000002L
#define BLDGRAY_COMBOBOX    0x00000004L
#define BLDGRAY_LISTBOX     0x00000008L
#define BLDGRAY_EDIT        0x00000010L
#define BLDGRAY_SCROLLBAR   0x00000020L
#define BLDGRAY_TEXT        0x00000040L
 

#endif //_WMINC_ALPHA

